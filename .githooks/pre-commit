#!/bin/bash
#
# Pre-commit hook to prevent AI tool attribution in commit messages
# This hook checks the commit message for common AI tool references and blocks them
#

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get the commit message file
commit_msg_file="$1"

# If no commit message file provided, we're likely in a hook context
# where the message is passed via stdin or we need to check git's temp file
if [ -z "$commit_msg_file" ]; then
    commit_msg_file=".git/COMMIT_EDITMSG"
fi

# Check if the commit message file exists
if [ ! -f "$commit_msg_file" ]; then
    exit 0
fi

# Read the commit message
commit_msg=$(cat "$commit_msg_file")

# Define patterns to block (case insensitive)
blocked_patterns=(
    "Generated with.*Claude"
    "Generated with.*ChatGPT"
    "Generated with.*GPT"
    "Generated with.*AI"
    "Co-Authored-By: Claude"
    "Co-Authored-By: ChatGPT"
    "Co-Authored-By: GPT"
    "ü§ñ.*Generated"
    "ü§ñ.*Claude"
    "AI-generated"
    "AI generated"
    "Assisted by Claude"
    "Assisted by ChatGPT"
    "With help from Claude"
    "With help from ChatGPT"
)

# Check for blocked patterns
found_violation=false
for pattern in "${blocked_patterns[@]}"; do
    if echo "$commit_msg" | grep -qi "$pattern"; then
        if [ "$found_violation" = false ]; then
            echo -e "${RED}‚ùå Commit blocked: AI tool attribution detected in commit message${NC}"
            echo -e "${YELLOW}The following patterns are not allowed in commit messages:${NC}"
            found_violation=true
        fi
        echo -e "${RED}  - Pattern matched: $pattern${NC}"
    fi
done

# If violations found, show guidance and exit with error
if [ "$found_violation" = true ]; then
    echo ""
    echo -e "${YELLOW}Please remove AI tool attribution from your commit message.${NC}"
    echo -e "${YELLOW}Focus on describing what changed and why, not the tool used.${NC}"
    echo ""
    echo -e "${YELLOW}Good commit message examples:${NC}"
    echo -e "  ${YELLOW}‚Ä¢ Fix NATS health check endpoint${NC}"
    echo -e "  ${YELLOW}‚Ä¢ Update CI to use Go 1.24.3${NC}"
    echo -e "  ${YELLOW}‚Ä¢ Add error handling for connection timeouts${NC}"
    echo ""
    echo -e "${YELLOW}Edit your commit message and try again.${NC}"
    exit 1
fi

# Success - allow commit
exit 0